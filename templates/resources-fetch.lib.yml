#! resources template

#@ load("functions.lib.yml", "products")

resources:
  #@ def resources():

  - name: platform-automation-tasks
    type: s3
    source:
      endpoint: ((s3.endpoint))
      region_name: ((s3.region_name))
      access_key_id: ((s3.access_key_id))
      secret_access_key: ((s3.secret_access_key))
      bucket: ((s3.buckets.platform_automation))
      regexp: .*tasks-(.*).zip

  - name: platform-automation-image
    type: s3
    source:
      endpoint: ((s3.endpoint))
      region_name: ((s3.region_name))
      access_key_id: ((s3.access_key_id))
      secret_access_key: ((s3.secret_access_key))
      bucket: ((s3.buckets.platform_automation))
      regexp: .*image-(.*).tgz

  - name: configuration
    type: git
    source:
      private_key: ((git.private_key))
      uri: ((git.configuration.uri))
      branch: ((git.configuration.branch))

  - name: opsman-product
    type: s3
    source:
      endpoint: ((s3.endpoint))
      region_name: ((s3.region_name))
      access_key_id: ((s3.access_key_id))
      secret_access_key: ((s3.secret_access_key))
      bucket: ((s3.buckets.products))
      regexp: ((s3.opsman.regex))

  #! product related resourses

  #@ for product in products():

  #@ product_alias=product.split("|")[0]
  #@ product_slug=product.split("|")[1]

  - name: #@ "{}-product".format(product_alias)
    type: s3
    source:
      endpoint: ((s3.endpoint))
      region_name: ((s3.region_name))
      access_key_id: ((s3.access_key_id))
      secret_access_key: ((s3.secret_access_key))
      bucket: ((s3.buckets.products))
      regexp: #@ "products/\[{},(.*)\]{}-.*.pivotal".format(product_slug, product_slug)

  - name: #@ "{}-stemcell".format(product_alias)
    type: s3
    source:
      endpoint: ((s3.endpoint))
      region_name: ((s3.region_name))
      access_key_id: ((s3.access_key_id))
      secret_access_key: ((s3.secret_access_key))
      bucket: ((s3.buckets.products))
      regexp: #@ "{}-stemcells/\[stemcells-ubuntu-xenial,(.*)\]bosh-stemcell-.*-((iaas)).*\.tgz".format(product_alias)

#@ end
#! end of for product in products():

#@ end
#! end of def resources():
